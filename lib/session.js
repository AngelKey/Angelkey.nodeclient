// Generated by IcedCoffeeScript 1.6.3-g
(function() {
  var E, Session, env, iced, make_esc, req, __iced_k, __iced_k_noop;

  iced = require('iced-coffee-script/lib/coffee-script/iced').runtime;
  __iced_k = __iced_k_noop = function() {};

  env = require('./env').env;

  req = require('./req');

  E = require('./err').E;

  make_esc = require('iced-error').make_esc;

  exports.Session = Session = (function() {
    function Session() {}

    Session.prototype.get_id = function(cb) {
      var err, ret, s;
      err = ret = null;
      if ((s = env().session) == null) {
        err = new E.InternalError("no session object available");
      } else {
        ret = s.obj().session;
      }
      return cb(err, ret);
    };

    Session.prototype.check = function(cb) {
      var body, err, logged_in, ___iced_passed_deferral, __iced_deferrals, __iced_k,
        _this = this;
      __iced_k = __iced_k_noop;
      ___iced_passed_deferral = iced.findDeferral(arguments);
      logged_in = false;
      (function(__iced_k) {
        if (req.get_session()) {
          (function(__iced_k) {
            __iced_deferrals = new iced.Deferrals(__iced_k, {
              parent: ___iced_passed_deferral,
              filename: "src/session.iced",
              funcname: "Session.check"
            });
            req.get({
              endpoint: "sesscheck"
            }, __iced_deferrals.defer({
              assign_fn: (function() {
                return function() {
                  err = arguments[0];
                  return body = arguments[1];
                };
              })(),
              lineno: 29
            }));
            __iced_deferrals._fulfill();
          })(function() {
            var _ref;
            return __iced_k(typeof err === "undefined" || err === null ? logged_in = true : err && (err instanceof E.KeybaseError) && ((typeof body !== "undefined" && body !== null ? (_ref = body.status) != null ? _ref.name : void 0 : void 0) === "BAD_SESSION") ? err = null : void 0);
          });
        } else {
          return __iced_k();
        }
      })(function() {
        console.log(err);
        console.log(logged_in);
        return cb(err, logged_in);
      });
    };

    return Session;

  })();

  exports.check = function(cb) {
    return (new Session).check(cb);
  };

}).call(this);
