// Generated by IcedCoffeeScript 1.6.3-i
(function() {
  var constants, date_to_unixtime, fork, is_dict, make_email, path, purge;

  fork = require('child_process').fork;

  path = require('path');

  constants = require('./constants').constants;

  exports.rmkey = function(obj, key) {
    var ret;
    ret = obj[key];
    delete obj[key];
    return ret;
  };

  exports.daemon = function(args) {
    var icmd;
    icmd = path.join(__dirname, "..", "node_modules", ".bin", "iced");
    return fork(process.argv[1], args, {
      execPath: icmd,
      detatched: true
    });
  };

  exports.js2unix = function(t) {
    return Math.floor(t / 1000);
  };

  is_dict = function(d) {
    return (typeof d === 'object') && !(Array.isArray(d));
  };

  exports.purge = purge = function(d) {
    var k, out, v;
    out = {};
    for (k in d) {
      v = d[k];
      if (v != null) {
        out[k] = is_dict(v) ? purge(v) : v;
      }
    }
    return out;
  };

  exports.make_email = make_email = function(un) {
    return un + "@" + constants.canonical_host;
  };

  exports.date_to_unixtime = date_to_unixtime = function(s) {
    return ~~(s.getTime() / 1000);
  };

  exports.date_to_unix = function(o) {
    switch (typeof o) {
      case 'string':
        return date_to_unixtime(new Date(o));
      case 'number':
        return o;
      case 'object':
        if (o instanceof Date) {
          return date_to_unixtime(o);
        } else {
          return null;
        }
        break;
      default:
        return null;
    }
  };

}).call(this);
