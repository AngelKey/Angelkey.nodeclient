// Generated by IcedCoffeeScript 1.6.3-g
(function() {
  var SignatureEngine, decode, gpg, iced, __iced_k, __iced_k_noop;

  iced = require('iced-coffee-script/lib/coffee-script/iced').runtime;
  __iced_k = __iced_k_noop = function() {};

  gpg = require('./gpg').gpg;

  decode = require('pgp-utils').armor.decode;

  exports.SignatureEngine = SignatureEngine = (function() {
    function SignatureEngine(_arg) {
      this.km = _arg.km;
    }

    SignatureEngine.prototype.get_km = function() {
      return this.km;
    };

    SignatureEngine.prototype.box = function(msg, cb) {
      var arg, err, out, pgp, ___iced_passed_deferral, __iced_deferrals, __iced_k,
        _this = this;
      __iced_k = __iced_k_noop;
      ___iced_passed_deferral = iced.findDeferral(arguments);
      out = {};
      arg = {
        stdin: new Buffer(msg, 'utf8'),
        args: ["-u", this.km.get_pgp_key_id(), "--sign", "-a"]
      };
      (function(__iced_k) {
        __iced_deferrals = new iced.Deferrals(__iced_k, {
          parent: ___iced_passed_deferral,
          filename: "src/hilev.iced",
          funcname: "SignatureEngine.box"
        });
        gpg(arg, __iced_deferrals.defer({
          assign_fn: (function() {
            return function() {
              err = arguments[0];
              return pgp = arguments[1];
            };
          })(),
          lineno: 23
        }));
        __iced_deferrals._fulfill();
      })(function() {
        var _ref;
        if (typeof err === "undefined" || err === null) {
          out.pgp = pgp = pgp.toString('utf8');
          _ref = decode(pgp), err = _ref[0], msg = _ref[1];
          if (err == null) {
            out.raw = msg.body;
          }
        }
        return cb(err, out);
      });
    };

    return SignatureEngine;

  })();

}).call(this);
