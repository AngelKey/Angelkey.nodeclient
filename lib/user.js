// Generated by IcedCoffeeScript 1.6.3-i
(function() {
  var User, constants, db, iced, make_esc, req, __iced_k, __iced_k_noop;

  iced = require('iced-coffee-script/lib/coffee-script/iced').runtime;
  __iced_k = __iced_k_noop = function() {};

  req = require('./req');

  db = require('./db');

  constants = require('./constants').constants;

  make_esc = require('iced-error').make_esc;

  exports.User = User = (function() {
    function User(_arg) {
      this.basics = _arg.basics, this.public_keys = _arg.public_keys, this.id = _arg.id, this.sigs = _arg.sigs;
    }

    User.prototype.to_obj = function() {
      return {
        basics: this.basics,
        public_keys: this.public_keys,
        id: this.id,
        sigs: this.sigs
      };
    };

    User.prototype.name = function() {
      return {
        type: constants.lookups.username,
        name: this.basics.username
      };
    };

    User.prototype.store = function(cb) {
      var err, ___iced_passed_deferral, __iced_deferrals, __iced_k;
      __iced_k = __iced_k_noop;
      ___iced_passed_deferral = iced.findDeferral(arguments);
      (function(_this) {
        return (function(__iced_k) {
          __iced_deferrals = new iced.Deferrals(__iced_k, {
            parent: ___iced_passed_deferral,
            filename: "/Users/max/src/keybase-node-client/src/user.iced",
            funcname: "User.store"
          });
          db.put({
            key: _this.id,
            value: _this.to_obj(),
            name: _this.name()
          }, __iced_deferrals.defer({
            assign_fn: (function() {
              return function() {
                return err = arguments[0];
              };
            })(),
            lineno: 25
          }));
          __iced_deferrals._fulfill();
        });
      })(this)((function(_this) {
        return function() {
          return cb(err);
        };
      })(this));
    };

    User.load = function(_arg, cb) {
      var esc, local, remote, username, ___iced_passed_deferral, __iced_deferrals, __iced_k;
      __iced_k = __iced_k_noop;
      ___iced_passed_deferral = iced.findDeferral(arguments);
      username = _arg.username;
      esc = make_esc(cb, "User::load");
      (function(_this) {
        return (function(__iced_k) {
          __iced_deferrals = new iced.Deferrals(__iced_k, {
            parent: ___iced_passed_deferral,
            filename: "/Users/max/src/keybase-node-client/src/user.iced",
            funcname: "User.load"
          });
          User.load_from_server({
            username: username
          }, esc(__iced_deferrals.defer({
            assign_fn: (function() {
              return function() {
                return remote = arguments[0];
              };
            })(),
            lineno: 32
          })));
          __iced_deferrals._fulfill();
        });
      })(this)((function(_this) {
        return function() {
          (function(__iced_k) {
            __iced_deferrals = new iced.Deferrals(__iced_k, {
              parent: ___iced_passed_deferral,
              filename: "/Users/max/src/keybase-node-client/src/user.iced",
              funcname: "User.load"
            });
            User.load_from_storage({
              username: username
            }, esc(__iced_deferrals.defer({
              assign_fn: (function() {
                return function() {
                  return local = arguments[0];
                };
              })(),
              lineno: 33
            })));
            __iced_deferrals._fulfill();
          })(function() {
            (function(__iced_k) {
              if ((typeof remote !== "undefined" && remote !== null) && (typeof local === "undefined" || local === null)) {
                (function(__iced_k) {
                  __iced_deferrals = new iced.Deferrals(__iced_k, {
                    parent: ___iced_passed_deferral,
                    filename: "/Users/max/src/keybase-node-client/src/user.iced",
                    funcname: "User.load"
                  });
                  remote.store(esc(__iced_deferrals.defer({
                    lineno: 35
                  })));
                  __iced_deferrals._fulfill();
                })(__iced_k);
              } else {
                return __iced_k();
              }
            })(function() {
              console.log(remote);
              console.log(local);
              return cb(null, {
                local: local,
                remote: remote
              });
            });
          });
        };
      })(this));
    };

    User.load_from_server = function(_arg, cb) {
      var args, body, err, ret, username, ___iced_passed_deferral, __iced_deferrals, __iced_k;
      __iced_k = __iced_k_noop;
      ___iced_passed_deferral = iced.findDeferral(arguments);
      username = _arg.username;
      args = {
        endpoint: "user/lookup",
        args: {
          username: username
        }
      };
      (function(_this) {
        return (function(__iced_k) {
          __iced_deferrals = new iced.Deferrals(__iced_k, {
            parent: ___iced_passed_deferral,
            filename: "/Users/max/src/keybase-node-client/src/user.iced",
            funcname: "User.load_from_server"
          });
          req.get(args, __iced_deferrals.defer({
            assign_fn: (function() {
              return function() {
                err = arguments[0];
                return body = arguments[1];
              };
            })(),
            lineno: 46
          }));
          __iced_deferrals._fulfill();
        });
      })(this)((function(_this) {
        return function() {
          ret = null;
          if (typeof err === "undefined" || err === null) {
            ret = new User(body.them);
          }
          return cb(err, ret);
        };
      })(this));
    };

    User.load_from_storage = function(_arg, cb) {
      var err, ret, row, username, ___iced_passed_deferral, __iced_deferrals, __iced_k;
      __iced_k = __iced_k_noop;
      ___iced_passed_deferral = iced.findDeferral(arguments);
      username = _arg.username;
      ret = null;
      (function(_this) {
        return (function(__iced_k) {
          __iced_deferrals = new iced.Deferrals(__iced_k, {
            parent: ___iced_passed_deferral,
            filename: "/Users/max/src/keybase-node-client/src/user.iced",
            funcname: "User.load_from_storage"
          });
          db.lookup({
            type: constants.lookups.username,
            name: username
          }, __iced_deferrals.defer({
            assign_fn: (function() {
              return function() {
                err = arguments[0];
                return row = arguments[1];
              };
            })(),
            lineno: 56
          }));
          __iced_deferrals._fulfill();
        });
      })(this)((function(_this) {
        return function() {
          if ((typeof err === "undefined" || err === null) && (typeof row !== "undefined" && row !== null)) {
            ret = new User(row.value);
          }
          return cb(err, ret);
        };
      })(this));
    };

    return User;

  })();

}).call(this);
