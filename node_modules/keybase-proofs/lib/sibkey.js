// Generated by IcedCoffeeScript 1.8.0-c
(function() {
  var Base, Sibkey, SubkeyBase, constants,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Base = require('./base').Base;

  constants = require('./constants').constants;

  SubkeyBase = require('./subkey').SubkeyBase;

  exports.Sibkey = Sibkey = (function(_super) {
    __extends(Sibkey, _super);

    Sibkey.prototype.get_field = function() {
      return "sibkey";
    };

    Sibkey.prototype.get_subkey = function() {
      return this.sibkey;
    };

    Sibkey.prototype.get_subkm = function() {
      return this.sibkm;
    };

    Sibkey.prototype.set_subkey = function(s) {
      return this.sibkey = s;
    };

    Sibkey.prototype._type = function() {
      return constants.sig_types.sibkey;
    };

    function Sibkey(obj) {
      this.sibkey = obj.sibkey;
      this.sibkm = obj.sibkm;
      Sibkey.__super__.constructor.call(this, obj);
    }

    return Sibkey;

  })(SubkeyBase);

}).call(this);
