// Generated by IcedCoffeeScript 1.7.1-e
(function() {
  var Auth, Revoke, Track, Untrack, alloc, base, get_klass, web_service, _ref;

  web_service = require('./web_service');

  base = require('./base');

  _ref = require('./track'), Untrack = _ref.Untrack, Track = _ref.Track;

  Auth = require('./auth').Auth;

  Revoke = require('./revoke').Revoke;

  get_klass = function(type) {
    var err, klass;
    err = klass = null;
    klass = (function() {
      switch (type) {
        case "web_service_binding.twitter":
          return web_service.TwitterBinding;
        case "web_service_binding.github":
          return web_service.GithubBinding;
        case "web_service_binding.keybase":
          return web_service.KeybaseBinding;
        case "web_service_binding.generic":
          return web_service.GenericWebSiteBinding;
        case "generic_binding":
          return base.GenericBinding;
        case "web_service_binding.dns":
          return web_service.DnsBinding;
        case "track":
          return Track;
        case "untrack":
          return Untrack;
        case "auth":
          return Auth;
        case "revoke":
          return Revoke;
        default:
          err = new Error("Unknown proof class: " + type);
          return null;
      }
    })();
    return [err, klass];
  };

  alloc = function(type, args) {
    var err, klass, ret, _ref1;
    ret = null;
    _ref1 = get_klass(type), err = _ref1[0], klass = _ref1[1];
    if (klass != null) {
      ret = new klass(args);
    }
    return ret;
  };

  exports.get_klass = get_klass;

  exports.alloc = alloc;

}).call(this);
